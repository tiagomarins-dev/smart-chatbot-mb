"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/api/client.ts":
/*!***************************!*\
  !*** ./src/api/client.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: function() { return /* binding */ ApiClient; },\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\nconst API_URL = \"http://localhost:9032/api\" || 0;\n/**\n * API client for making requests to the backend\n */ class ApiClient {\n    /**\n   * Set the authentication token\n   */ setToken(token) {\n        this.token = token;\n        // Store token in localStorage for persistence\n        if (true) {\n            localStorage.setItem(\"auth_token\", token);\n        }\n    }\n    /**\n   * Get the authentication token\n   */ getToken() {\n        // Try to get from instance, then from localStorage\n        if (!this.token && \"object\" !== \"undefined\") {\n            this.token = localStorage.getItem(\"auth_token\");\n        }\n        return this.token;\n    }\n    /**\n   * Clear the authentication token\n   */ clearToken() {\n        this.token = null;\n        if (true) {\n            localStorage.removeItem(\"auth_token\");\n        }\n    }\n    /**\n   * Make a GET request\n   */ async get(path, params) {\n        const url = new URL(\"\".concat(API_URL).concat(path));\n        // Add query parameters\n        if (params) {\n            Object.entries(params).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null) {\n                    url.searchParams.append(key, String(value));\n                }\n            });\n        }\n        const response = await fetch(url.toString(), {\n            method: \"GET\",\n            headers: this.getHeaders()\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a POST request\n   */ async post(path, data) {\n        const response = await fetch(\"\".concat(API_URL).concat(path), {\n            method: \"POST\",\n            headers: this.getHeaders(),\n            body: data ? JSON.stringify(data) : undefined\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a PUT request\n   */ async put(path, data) {\n        // Log para debug\n        console.log(\"PUT request to: \".concat(API_URL).concat(path));\n        console.log(\"Data being sent:\", data);\n        console.log(\"JSON data:\", data ? JSON.stringify(data) : \"undefined\");\n        const response = await fetch(\"\".concat(API_URL).concat(path), {\n            method: \"PUT\",\n            headers: this.getHeaders(),\n            body: data ? JSON.stringify(data) : undefined\n        });\n        // Log para debug\n        console.log(\"Response status:\", response.status);\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a DELETE request\n   */ async delete(path) {\n        const response = await fetch(\"\".concat(API_URL).concat(path), {\n            method: \"DELETE\",\n            headers: this.getHeaders()\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Get headers for API requests\n   */ getHeaders() {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        const token = this.getToken();\n        if (token) {\n            headers[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        return headers;\n    }\n    /**\n   * Handle API response\n   */ async handleResponse(response) {\n        try {\n            // Log para debug\n            console.log(\"Response status before parsing:\", response.status);\n            const responseText = await response.text();\n            console.log(\"Response text:\", responseText);\n            // Parse texto para JSON\n            let data;\n            try {\n                data = JSON.parse(responseText);\n                console.log(\"Parsed data:\", data);\n            } catch (e) {\n                console.error(\"Error parsing JSON:\", e);\n                return {\n                    success: false,\n                    error: \"Invalid JSON response: \" + responseText.substring(0, 100) + \"...\",\n                    statusCode: response.status\n                };\n            }\n            // If the response is not in the expected format, normalize it\n            if (data.success === undefined) {\n                return {\n                    success: response.ok,\n                    data: response.ok ? data : undefined,\n                    error: response.ok ? undefined : data.message || \"Unknown error\",\n                    statusCode: response.status\n                };\n            }\n            return data;\n        } catch (e) {\n            console.error(\"Error in handleResponse:\", e);\n            return {\n                success: false,\n                error: \"Error processing response: \" + String(e),\n                statusCode: response.status || 500\n            };\n        }\n    }\n    constructor(){\n        this.token = null;\n    }\n}\n// Create a singleton instance\nconst apiClient = new ApiClient();\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/client.ts\n"));

/***/ })

});