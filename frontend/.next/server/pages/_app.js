/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_dark_mode_tables_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/dark-mode-tables.css */ \"./styles/dark-mode-tables.css\");\n/* harmony import */ var _styles_dark_mode_tables_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_dark_mode_tables_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"next/head\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _src_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../src/contexts/AuthContext */ \"./src/contexts/AuthContext.tsx\");\n/* harmony import */ var _src_contexts_RealtimeContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../src/contexts/RealtimeContext */ \"./src/contexts/RealtimeContext.tsx\");\n/* harmony import */ var _src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../src/contexts/ThemeContext */ \"./src/contexts/ThemeContext.tsx\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap.min.css */ \"./node_modules/bootstrap/dist/css/bootstrap.min.css\");\n/* harmony import */ var bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(bootstrap_dist_css_bootstrap_min_css__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n// Import Bootstrap CSS (if you're using it)\n\n// Import Bootstrap JS\n\nfunction MyApp({ Component, pageProps }) {\n    (0,react__WEBPACK_IMPORTED_MODULE_8__.useEffect)(()=>{\n        // Import Bootstrap JS on client-side\n        if (false) {}\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Smart CRM\"\n                    }, void 0, false, {\n                        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                lineNumber: 25,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_6__.ThemeProvider, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_contexts_AuthContext__WEBPACK_IMPORTED_MODULE_4__.AuthProvider, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_src_contexts_RealtimeContext__WEBPACK_IMPORTED_MODULE_5__.RealtimeProvider, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                            ...pageProps\n                        }, void 0, false, {\n                            fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                            lineNumber: 33,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                        lineNumber: 32,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                    lineNumber: 31,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/pages/_app.tsx\",\n                lineNumber: 30,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNTO0FBRVg7QUFDOEI7QUFDUTtBQUNOO0FBRTdELDRDQUE0QztBQUNFO0FBRTlDLHNCQUFzQjtBQUNZO0FBRWxDLFNBQVNLLE1BQU0sRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQVk7SUFDL0NILGdEQUFTQSxDQUFDO1FBQ1IscUNBQXFDO1FBQ3JDLElBQUksS0FBa0IsRUFBYSxFQUVsQztJQUNILEdBQUcsRUFBRTtJQUVMLHFCQUNFOzswQkFDRSw4REFBQ0osa0RBQUlBOztrQ0FDSCw4REFBQ1M7d0JBQUtDLE1BQUs7d0JBQVdDLFNBQVE7Ozs7OztrQ0FDOUIsOERBQUNDO2tDQUFNOzs7Ozs7Ozs7Ozs7MEJBR1QsOERBQUNULHFFQUFhQTswQkFDWiw0RUFBQ0YsbUVBQVlBOzhCQUNYLDRFQUFDQywyRUFBZ0JBO2tDQUNmLDRFQUFDSTs0QkFBVyxHQUFHQyxTQUFTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1wQztBQUVBLGlFQUFlRixLQUFLQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9wYWdlcy9fYXBwLnRzeD8yZmJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vc3R5bGVzL2dsb2JhbHMuY3NzJztcbmltcG9ydCAnLi4vc3R5bGVzL2RhcmstbW9kZS10YWJsZXMuY3NzJztcbmltcG9ydCB0eXBlIHsgQXBwUHJvcHMgfSBmcm9tICduZXh0L2FwcCc7XG5pbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnO1xuaW1wb3J0IHsgQXV0aFByb3ZpZGVyIH0gZnJvbSAnLi4vc3JjL2NvbnRleHRzL0F1dGhDb250ZXh0JztcbmltcG9ydCB7IFJlYWx0aW1lUHJvdmlkZXIgfSBmcm9tICcuLi9zcmMvY29udGV4dHMvUmVhbHRpbWVDb250ZXh0JztcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICcuLi9zcmMvY29udGV4dHMvVGhlbWVDb250ZXh0JztcblxuLy8gSW1wb3J0IEJvb3RzdHJhcCBDU1MgKGlmIHlvdSdyZSB1c2luZyBpdClcbmltcG9ydCAnYm9vdHN0cmFwL2Rpc3QvY3NzL2Jvb3RzdHJhcC5taW4uY3NzJztcblxuLy8gSW1wb3J0IEJvb3RzdHJhcCBKU1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH06IEFwcFByb3BzKSB7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gSW1wb3J0IEJvb3RzdHJhcCBKUyBvbiBjbGllbnQtc2lkZVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgcmVxdWlyZSgnYm9vdHN0cmFwL2Rpc3QvanMvYm9vdHN0cmFwLmJ1bmRsZS5taW4uanMnKTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xXCIgLz5cbiAgICAgICAgPHRpdGxlPlNtYXJ0IENSTTwvdGl0bGU+XG4gICAgICA8L0hlYWQ+XG4gICAgICBcbiAgICAgIDxUaGVtZVByb3ZpZGVyPlxuICAgICAgICA8QXV0aFByb3ZpZGVyPlxuICAgICAgICAgIDxSZWFsdGltZVByb3ZpZGVyPlxuICAgICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgICAgIDwvUmVhbHRpbWVQcm92aWRlcj5cbiAgICAgICAgPC9BdXRoUHJvdmlkZXI+XG4gICAgICA8L1RoZW1lUHJvdmlkZXI+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwOyJdLCJuYW1lcyI6WyJIZWFkIiwiQXV0aFByb3ZpZGVyIiwiUmVhbHRpbWVQcm92aWRlciIsIlRoZW1lUHJvdmlkZXIiLCJ1c2VFZmZlY3QiLCJNeUFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsInJlcXVpcmUiLCJtZXRhIiwibmFtZSIsImNvbnRlbnQiLCJ0aXRsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "./src/api/auth.ts":
/*!*************************!*\
  !*** ./src/api/auth.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authApi: () => (/* binding */ authApi),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client */ \"./src/api/client.ts\");\n\nconst authApi = {\n    /**\n   * Login user\n   */ login: async (email, password)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/auth/login\", {\n            email,\n            password\n        });\n        // Store token if login successful\n        if (response.success && response.data?.token) {\n            _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setToken(response.data.token);\n        }\n        return response;\n    },\n    /**\n   * Register a new user\n   */ register: async (email, password, name)=>{\n        return await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/auth/register\", {\n            email,\n            password,\n            name\n        });\n    },\n    /**\n   * Verify the current token\n   */ verifyToken: async ()=>{\n        const token = _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getToken();\n        if (!token) {\n            return {\n                success: false,\n                error: \"No token available\",\n                statusCode: 401\n            };\n        }\n        return await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"/auth/verify\", {\n            token\n        });\n    },\n    /**\n   * Get current user\n   */ getCurrentUser: async ()=>{\n        return await _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"/auth/user\");\n    },\n    /**\n   * Logout user\n   */ logout: ()=>{\n        _client__WEBPACK_IMPORTED_MODULE_0__[\"default\"].clearToken();\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (authApi);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBpL2F1dGgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlDO0FBRzFCLE1BQU1DLFVBQVU7SUFDckI7O0dBRUMsR0FDREMsT0FBTyxPQUFPQyxPQUFlQztRQUMzQixNQUFNQyxXQUFXLE1BQU1MLG9EQUFjLENBQWUsZUFBZTtZQUFFRztZQUFPQztRQUFTO1FBRXJGLGtDQUFrQztRQUNsQyxJQUFJQyxTQUFTRSxPQUFPLElBQUlGLFNBQVNHLElBQUksRUFBRUMsT0FBTztZQUM1Q1Qsd0RBQWtCLENBQUNLLFNBQVNHLElBQUksQ0FBQ0MsS0FBSztRQUN4QztRQUVBLE9BQU9KO0lBQ1Q7SUFFQTs7R0FFQyxHQUNETSxVQUFVLE9BQU9SLE9BQWVDLFVBQWtCUTtRQUNoRCxPQUFPLE1BQU1aLG9EQUFjLENBQWUsa0JBQWtCO1lBQUVHO1lBQU9DO1lBQVVRO1FBQUs7SUFDdEY7SUFFQTs7R0FFQyxHQUNEQyxhQUFhO1FBQ1gsTUFBTUosUUFBUVQsd0RBQWtCO1FBRWhDLElBQUksQ0FBQ1MsT0FBTztZQUNWLE9BQU87Z0JBQ0xGLFNBQVM7Z0JBQ1RRLE9BQU87Z0JBQ1BDLFlBQVk7WUFDZDtRQUNGO1FBRUEsT0FBTyxNQUFNaEIsb0RBQWMsQ0FBaUMsZ0JBQWdCO1lBQUVTO1FBQU07SUFDdEY7SUFFQTs7R0FFQyxHQUNEUSxnQkFBZ0I7UUFDZCxPQUFPLE1BQU1qQixtREFBYSxDQUFpQjtJQUM3QztJQUVBOztHQUVDLEdBQ0RtQixRQUFRO1FBQ05uQiwwREFBb0I7SUFDdEI7QUFDRixFQUFFO0FBRUYsaUVBQWVDLE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL3NyYy9hcGkvYXV0aC50cz85YzgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcGlDbGllbnQgZnJvbSAnLi9jbGllbnQnO1xuaW1wb3J0IHsgQXBpUmVzcG9uc2UsIEF1dGhSZXNwb25zZSwgVXNlciB9IGZyb20gJy4uL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgY29uc3QgYXV0aEFwaSA9IHtcbiAgLyoqXG4gICAqIExvZ2luIHVzZXJcbiAgICovXG4gIGxvZ2luOiBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8QXBpUmVzcG9uc2U8QXV0aFJlc3BvbnNlPj4gPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LnBvc3Q8QXV0aFJlc3BvbnNlPignL2F1dGgvbG9naW4nLCB7IGVtYWlsLCBwYXNzd29yZCB9KTtcbiAgICBcbiAgICAvLyBTdG9yZSB0b2tlbiBpZiBsb2dpbiBzdWNjZXNzZnVsXG4gICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MgJiYgcmVzcG9uc2UuZGF0YT8udG9rZW4pIHtcbiAgICAgIGFwaUNsaWVudC5zZXRUb2tlbihyZXNwb25zZS5kYXRhLnRva2VuKTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LFxuICBcbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgbmV3IHVzZXJcbiAgICovXG4gIHJlZ2lzdGVyOiBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgbmFtZTogc3RyaW5nKTogUHJvbWlzZTxBcGlSZXNwb25zZTxBdXRoUmVzcG9uc2U+PiA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5wb3N0PEF1dGhSZXNwb25zZT4oJy9hdXRoL3JlZ2lzdGVyJywgeyBlbWFpbCwgcGFzc3dvcmQsIG5hbWUgfSk7XG4gIH0sXG4gIFxuICAvKipcbiAgICogVmVyaWZ5IHRoZSBjdXJyZW50IHRva2VuXG4gICAqL1xuICB2ZXJpZnlUb2tlbjogYXN5bmMgKCk6IFByb21pc2U8QXBpUmVzcG9uc2U8eyB2YWxpZDogYm9vbGVhbjsgdXNlcjogVXNlciB9Pj4gPT4ge1xuICAgIGNvbnN0IHRva2VuID0gYXBpQ2xpZW50LmdldFRva2VuKCk7XG4gICAgXG4gICAgaWYgKCF0b2tlbikge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgIGVycm9yOiAnTm8gdG9rZW4gYXZhaWxhYmxlJyxcbiAgICAgICAgc3RhdHVzQ29kZTogNDAxXG4gICAgICB9O1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gYXdhaXQgYXBpQ2xpZW50LnBvc3Q8eyB2YWxpZDogYm9vbGVhbjsgdXNlcjogVXNlciB9PignL2F1dGgvdmVyaWZ5JywgeyB0b2tlbiB9KTtcbiAgfSxcbiAgXG4gIC8qKlxuICAgKiBHZXQgY3VycmVudCB1c2VyXG4gICAqL1xuICBnZXRDdXJyZW50VXNlcjogYXN5bmMgKCk6IFByb21pc2U8QXBpUmVzcG9uc2U8eyB1c2VyOiBVc2VyIH0+PiA9PiB7XG4gICAgcmV0dXJuIGF3YWl0IGFwaUNsaWVudC5nZXQ8eyB1c2VyOiBVc2VyIH0+KCcvYXV0aC91c2VyJyk7XG4gIH0sXG4gIFxuICAvKipcbiAgICogTG9nb3V0IHVzZXJcbiAgICovXG4gIGxvZ291dDogKCk6IHZvaWQgPT4ge1xuICAgIGFwaUNsaWVudC5jbGVhclRva2VuKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGF1dGhBcGk7Il0sIm5hbWVzIjpbImFwaUNsaWVudCIsImF1dGhBcGkiLCJsb2dpbiIsImVtYWlsIiwicGFzc3dvcmQiLCJyZXNwb25zZSIsInBvc3QiLCJzdWNjZXNzIiwiZGF0YSIsInRva2VuIiwic2V0VG9rZW4iLCJyZWdpc3RlciIsIm5hbWUiLCJ2ZXJpZnlUb2tlbiIsImdldFRva2VuIiwiZXJyb3IiLCJzdGF0dXNDb2RlIiwiZ2V0Q3VycmVudFVzZXIiLCJnZXQiLCJsb2dvdXQiLCJjbGVhclRva2VuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/api/auth.ts\n");

/***/ }),

/***/ "./src/api/client.ts":
/*!***************************!*\
  !*** ./src/api/client.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiClient: () => (/* binding */ ApiClient),\n/* harmony export */   apiClient: () => (/* binding */ apiClient),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst API_URL = \"http://localhost:9032/api\" || 0;\n/**\n * API client for making requests to the backend\n */ class ApiClient {\n    /**\n   * Set the authentication token\n   */ setToken(token) {\n        this.token = token;\n        // Store token in localStorage for persistence\n        if (false) {}\n    }\n    /**\n   * Get the authentication token\n   */ getToken() {\n        // Try to get from instance, then from localStorage\n        if (!this.token && \"undefined\" !== \"undefined\") {}\n        return this.token;\n    }\n    /**\n   * Clear the authentication token\n   */ clearToken() {\n        this.token = null;\n        if (false) {}\n    }\n    /**\n   * Make a GET request\n   */ async get(path, params) {\n        const url = new URL(`${API_URL}${path}`);\n        // Add query parameters\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined && value !== null) {\n                    url.searchParams.append(key, String(value));\n                }\n            });\n        }\n        const response = await fetch(url.toString(), {\n            method: \"GET\",\n            headers: this.getHeaders()\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a POST request\n   */ async post(path, data) {\n        const response = await fetch(`${API_URL}${path}`, {\n            method: \"POST\",\n            headers: this.getHeaders(),\n            body: data ? JSON.stringify(data) : undefined\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a PUT request\n   */ async put(path, data) {\n        const response = await fetch(`${API_URL}${path}`, {\n            method: \"PUT\",\n            headers: this.getHeaders(),\n            body: data ? JSON.stringify(data) : undefined\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Make a DELETE request\n   */ async delete(path) {\n        const response = await fetch(`${API_URL}${path}`, {\n            method: \"DELETE\",\n            headers: this.getHeaders()\n        });\n        return this.handleResponse(response);\n    }\n    /**\n   * Get headers for API requests\n   */ getHeaders() {\n        const headers = {\n            \"Content-Type\": \"application/json\"\n        };\n        const token = this.getToken();\n        if (token) {\n            headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n        return headers;\n    }\n    /**\n   * Handle API response\n   */ async handleResponse(response) {\n        const data = await response.json();\n        // If the response is not in the expected format, normalize it\n        if (data.success === undefined) {\n            return {\n                success: response.ok,\n                data: response.ok ? data : undefined,\n                error: response.ok ? undefined : data.message || \"Unknown error\",\n                statusCode: response.status\n            };\n        }\n        return data;\n    }\n    constructor(){\n        this.token = null;\n    }\n}\n// Create a singleton instance\nconst apiClient = new ApiClient();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (apiClient);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/api/client.ts\n");

/***/ }),

/***/ "./src/contexts/AuthContext.tsx":
/*!**************************************!*\
  !*** ./src/contexts/AuthContext.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _api_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api/auth */ \"./src/api/auth.ts\");\n\n\n\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    isAuthenticated: false,\n    isLoading: true,\n    login: async ()=>false,\n    logout: ()=>{},\n    register: async ()=>false\n});\nconst AuthProvider = ({ children })=>{\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if user is authenticated on mount\n        const verifyAuth = async ()=>{\n            try {\n                const response = await _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].verifyToken();\n                if (response.success && response.data?.valid) {\n                    setUser(response.data.user);\n                } else {\n                    // Clear any invalid token\n                    _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].logout();\n                }\n            } catch (error) {\n                console.error(\"Auth verification error:\", error);\n                // Clear token on error\n                _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].logout();\n            } finally{\n                setIsLoading(false);\n            }\n        };\n        verifyAuth();\n    }, []);\n    const login = async (email, password)=>{\n        setIsLoading(true);\n        try {\n            const response = await _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].login(email, password);\n            if (response.success && response.data?.user) {\n                setUser(response.data.user);\n                return true;\n            }\n            return false;\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const logout = ()=>{\n        _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].logout();\n        setUser(null);\n    };\n    const register = async (email, password, name)=>{\n        setIsLoading(true);\n        try {\n            const response = await _api_auth__WEBPACK_IMPORTED_MODULE_2__[\"default\"].register(email, password, name);\n            return response.success;\n        } catch (error) {\n            console.error(\"Registration error:\", error);\n            return false;\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: {\n            user,\n            isAuthenticated: !!user,\n            isLoading,\n            login,\n            logout,\n            register\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/src/contexts/AuthContext.tsx\",\n        lineNumber: 88,\n        columnNumber: 5\n    }, undefined);\n};\nconst useAuth = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AuthContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvQXV0aENvbnRleHQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4RTtBQUU1QztBQVdsQyxNQUFNTSw0QkFBY0wsb0RBQWFBLENBQWtCO0lBQ2pETSxNQUFNO0lBQ05DLGlCQUFpQjtJQUNqQkMsV0FBVztJQUNYQyxPQUFPLFVBQVk7SUFDbkJDLFFBQVEsS0FBTztJQUNmQyxVQUFVLFVBQVk7QUFDeEI7QUFFTyxNQUFNQyxlQUF3RCxDQUFDLEVBQUVDLFFBQVEsRUFBRTtJQUNoRixNQUFNLENBQUNQLE1BQU1RLFFBQVEsR0FBR2IsK0NBQVFBLENBQWM7SUFDOUMsTUFBTSxDQUFDTyxXQUFXTyxhQUFhLEdBQUdkLCtDQUFRQSxDQUFDO0lBRTNDQyxnREFBU0EsQ0FBQztRQUNSLDBDQUEwQztRQUMxQyxNQUFNYyxhQUFhO1lBQ2pCLElBQUk7Z0JBQ0YsTUFBTUMsV0FBVyxNQUFNYiw2REFBbUI7Z0JBRTFDLElBQUlhLFNBQVNFLE9BQU8sSUFBSUYsU0FBU0csSUFBSSxFQUFFQyxPQUFPO29CQUM1Q1AsUUFBUUcsU0FBU0csSUFBSSxDQUFDZCxJQUFJO2dCQUM1QixPQUFPO29CQUNMLDBCQUEwQjtvQkFDMUJGLHdEQUFjO2dCQUNoQjtZQUNGLEVBQUUsT0FBT2tCLE9BQU87Z0JBQ2RDLFFBQVFELEtBQUssQ0FBQyw0QkFBNEJBO2dCQUMxQyx1QkFBdUI7Z0JBQ3ZCbEIsd0RBQWM7WUFDaEIsU0FBVTtnQkFDUlcsYUFBYTtZQUNmO1FBQ0Y7UUFFQUM7SUFDRixHQUFHLEVBQUU7SUFFTCxNQUFNUCxRQUFRLE9BQU9lLE9BQWVDO1FBQ2xDVixhQUFhO1FBQ2IsSUFBSTtZQUNGLE1BQU1FLFdBQVcsTUFBTWIsdURBQWEsQ0FBQ29CLE9BQU9DO1lBRTVDLElBQUlSLFNBQVNFLE9BQU8sSUFBSUYsU0FBU0csSUFBSSxFQUFFZCxNQUFNO2dCQUMzQ1EsUUFBUUcsU0FBU0csSUFBSSxDQUFDZCxJQUFJO2dCQUMxQixPQUFPO1lBQ1Q7WUFDQSxPQUFPO1FBQ1QsRUFBRSxPQUFPZ0IsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsZ0JBQWdCQTtZQUM5QixPQUFPO1FBQ1QsU0FBVTtZQUNSUCxhQUFhO1FBQ2Y7SUFDRjtJQUVBLE1BQU1MLFNBQVM7UUFDYk4sd0RBQWM7UUFDZFUsUUFBUTtJQUNWO0lBRUEsTUFBTUgsV0FBVyxPQUFPYSxPQUFlQyxVQUFrQkM7UUFDdkRYLGFBQWE7UUFDYixJQUFJO1lBQ0YsTUFBTUUsV0FBVyxNQUFNYiwwREFBZ0IsQ0FBQ29CLE9BQU9DLFVBQVVDO1lBQ3pELE9BQU9ULFNBQVNFLE9BQU87UUFDekIsRUFBRSxPQUFPRyxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQyx1QkFBdUJBO1lBQ3JDLE9BQU87UUFDVCxTQUFVO1lBQ1JQLGFBQWE7UUFDZjtJQUNGO0lBRUEscUJBQ0UsOERBQUNWLFlBQVlzQixRQUFRO1FBQ25CQyxPQUFPO1lBQ0x0QjtZQUNBQyxpQkFBaUIsQ0FBQyxDQUFDRDtZQUNuQkU7WUFDQUM7WUFDQUM7WUFDQUM7UUFDRjtrQkFFQ0U7Ozs7OztBQUdQLEVBQUU7QUFFSyxNQUFNZ0IsVUFBVSxJQUFNMUIsaURBQVVBLENBQUNFLGFBQWE7QUFFckQsaUVBQWVBLFdBQVdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL3NyYy9jb250ZXh0cy9BdXRoQ29udGV4dC50c3g/MWZhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFVzZXIgfSBmcm9tICcuLi9pbnRlcmZhY2VzJztcbmltcG9ydCBhdXRoQXBpIGZyb20gJy4uL2FwaS9hdXRoJztcblxuaW50ZXJmYWNlIEF1dGhDb250ZXh0VHlwZSB7XG4gIHVzZXI6IFVzZXIgfCBudWxsO1xuICBpc0F1dGhlbnRpY2F0ZWQ6IGJvb2xlYW47XG4gIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgbG9naW46IChlbWFpbDogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xuICBsb2dvdXQ6ICgpID0+IHZvaWQ7XG4gIHJlZ2lzdGVyOiAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZywgbmFtZTogc3RyaW5nKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xufVxuXG5jb25zdCBBdXRoQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QXV0aENvbnRleHRUeXBlPih7XG4gIHVzZXI6IG51bGwsXG4gIGlzQXV0aGVudGljYXRlZDogZmFsc2UsXG4gIGlzTG9hZGluZzogdHJ1ZSxcbiAgbG9naW46IGFzeW5jICgpID0+IGZhbHNlLFxuICBsb2dvdXQ6ICgpID0+IHt9LFxuICByZWdpc3RlcjogYXN5bmMgKCkgPT4gZmFsc2UsXG59KTtcblxuZXhwb3J0IGNvbnN0IEF1dGhQcm92aWRlcjogUmVhY3QuRkM8eyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbdXNlciwgc2V0VXNlcl0gPSB1c2VTdGF0ZTxVc2VyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIENoZWNrIGlmIHVzZXIgaXMgYXV0aGVudGljYXRlZCBvbiBtb3VudFxuICAgIGNvbnN0IHZlcmlmeUF1dGggPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF1dGhBcGkudmVyaWZ5VG9rZW4oKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzICYmIHJlc3BvbnNlLmRhdGE/LnZhbGlkKSB7XG4gICAgICAgICAgc2V0VXNlcihyZXNwb25zZS5kYXRhLnVzZXIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIENsZWFyIGFueSBpbnZhbGlkIHRva2VuXG4gICAgICAgICAgYXV0aEFwaS5sb2dvdXQoKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignQXV0aCB2ZXJpZmljYXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAvLyBDbGVhciB0b2tlbiBvbiBlcnJvclxuICAgICAgICBhdXRoQXBpLmxvZ291dCgpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdmVyaWZ5QXV0aCgpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgbG9naW4gPSBhc3luYyAoZW1haWw6IHN0cmluZywgcGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhdXRoQXBpLmxvZ2luKGVtYWlsLCBwYXNzd29yZCk7XG4gICAgICBcbiAgICAgIGlmIChyZXNwb25zZS5zdWNjZXNzICYmIHJlc3BvbnNlLmRhdGE/LnVzZXIpIHtcbiAgICAgICAgc2V0VXNlcihyZXNwb25zZS5kYXRhLnVzZXIpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignTG9naW4gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBsb2dvdXQgPSAoKSA9PiB7XG4gICAgYXV0aEFwaS5sb2dvdXQoKTtcbiAgICBzZXRVc2VyKG51bGwpO1xuICB9O1xuXG4gIGNvbnN0IHJlZ2lzdGVyID0gYXN5bmMgKGVtYWlsOiBzdHJpbmcsIHBhc3N3b3JkOiBzdHJpbmcsIG5hbWU6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xuICAgIHNldElzTG9hZGluZyh0cnVlKTtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhdXRoQXBpLnJlZ2lzdGVyKGVtYWlsLCBwYXNzd29yZCwgbmFtZSk7XG4gICAgICByZXR1cm4gcmVzcG9uc2Uuc3VjY2VzcztcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignUmVnaXN0cmF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8QXV0aENvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIHVzZXIsXG4gICAgICAgIGlzQXV0aGVudGljYXRlZDogISF1c2VyLFxuICAgICAgICBpc0xvYWRpbmcsXG4gICAgICAgIGxvZ2luLFxuICAgICAgICBsb2dvdXQsXG4gICAgICAgIHJlZ2lzdGVyLFxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9BdXRoQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VBdXRoID0gKCkgPT4gdXNlQ29udGV4dChBdXRoQ29udGV4dCk7XG5cbmV4cG9ydCBkZWZhdWx0IEF1dGhDb250ZXh0OyJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZUNvbnRleHQiLCJhdXRoQXBpIiwiQXV0aENvbnRleHQiLCJ1c2VyIiwiaXNBdXRoZW50aWNhdGVkIiwiaXNMb2FkaW5nIiwibG9naW4iLCJsb2dvdXQiLCJyZWdpc3RlciIsIkF1dGhQcm92aWRlciIsImNoaWxkcmVuIiwic2V0VXNlciIsInNldElzTG9hZGluZyIsInZlcmlmeUF1dGgiLCJyZXNwb25zZSIsInZlcmlmeVRva2VuIiwic3VjY2VzcyIsImRhdGEiLCJ2YWxpZCIsImVycm9yIiwiY29uc29sZSIsImVtYWlsIiwicGFzc3dvcmQiLCJuYW1lIiwiUHJvdmlkZXIiLCJ2YWx1ZSIsInVzZUF1dGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/contexts/AuthContext.tsx\n");

/***/ }),

/***/ "./src/contexts/RealtimeContext.tsx":
/*!******************************************!*\
  !*** ./src/contexts/RealtimeContext.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealtimeProvider: () => (/* binding */ RealtimeProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useRealtime: () => (/* binding */ useRealtime)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _services_websocketService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/websocketService */ \"./src/services/websocketService.ts\");\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthContext */ \"./src/contexts/AuthContext.tsx\");\n\n\n\n\n// Create context\nconst RealtimeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    isConnected: false,\n    subscribeToCompanies: ()=>{},\n    subscribeToLeads: ()=>{},\n    subscribeToContacts: ()=>{},\n    unsubscribeFromCompanies: ()=>{},\n    unsubscribeFromLeads: ()=>{},\n    unsubscribeFromContacts: ()=>{},\n    companies: [],\n    leads: [],\n    contacts: [],\n    leadStats: null,\n    updateLeadStats: ()=>{}\n});\n// Channel names for different resources\nconst COMPANIES_CHANNEL = \"companies:*\";\nconst LEADS_CHANNEL = \"leads:*\";\nconst CONTACTS_CHANNEL = \"contacts:*\";\n// Provider component\nconst RealtimeProvider = ({ children })=>{\n    const { isAuthenticated, user } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_3__.useAuth)();\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // State for cached data\n    const [companies, setCompanies] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [leads, setLeads] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [contacts, setContacts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [leadStats, setLeadStats] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Get WebSocket service instance\n    const websocketService = _services_websocketService__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    // Connect to WebSocket and authenticate when user is authenticated\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isAuthenticated && user) {\n            // Connect to WebSocket\n            const connectWebSocket = async ()=>{\n                try {\n                    const connected = await websocketService.connect();\n                    setIsConnected(connected);\n                    if (connected) {\n                        // Get token from localStorage\n                        const token = localStorage.getItem(\"auth_token\");\n                        if (token) {\n                            websocketService.authenticate(token);\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error connecting to WebSocket:\", error);\n                    setIsConnected(false);\n                }\n            };\n            connectWebSocket();\n            // Clean up on unmount\n            return ()=>{\n                websocketService.disconnect();\n                setIsConnected(false);\n            };\n        }\n    }, [\n        isAuthenticated,\n        user\n    ]);\n    // Companies handlers\n    const handleCompanyInsert = (company)=>{\n        setCompanies((prevCompanies)=>{\n            // Make sure we don't duplicate\n            const exists = prevCompanies.some((c)=>c.id === company.id);\n            if (exists) return prevCompanies;\n            // Add new company\n            return [\n                ...prevCompanies,\n                company\n            ];\n        });\n    };\n    const handleCompanyUpdate = (company)=>{\n        setCompanies((prevCompanies)=>prevCompanies.map((c)=>c.id === company.id ? company : c));\n    };\n    const handleCompanyDelete = (company)=>{\n        setCompanies((prevCompanies)=>prevCompanies.filter((c)=>c.id !== company.id));\n    };\n    // Leads handlers\n    const handleLeadInsert = (lead)=>{\n        setLeads((prevLeads)=>{\n            // Make sure we don't duplicate\n            const exists = prevLeads.some((l)=>l.id === lead.id);\n            if (exists) return prevLeads;\n            // Add new lead\n            return [\n                ...prevLeads,\n                lead\n            ];\n        });\n        // Update stats if we have them\n        if (leadStats) {\n            setLeadStats({\n                ...leadStats,\n                total_leads: leadStats.total_leads + 1,\n                new_leads_period: leadStats.new_leads_period + 1,\n                // Update status count\n                leads_by_status: {\n                    ...leadStats.leads_by_status,\n                    [lead.status]: (leadStats.leads_by_status[lead.status] || 0) + 1\n                }\n            });\n        }\n    };\n    const handleLeadUpdate = (lead)=>{\n        setLeads((prevLeads)=>{\n            // Find the lead we're updating\n            const oldLead = prevLeads.find((l)=>l.id === lead.id);\n            // Update the lead\n            const updatedLeads = prevLeads.map((l)=>l.id === lead.id ? lead : l);\n            // Update stats if status changed\n            if (oldLead && oldLead.status !== lead.status && leadStats) {\n                // Decrement the old status count\n                const oldStatusCount = leadStats.leads_by_status[oldLead.status] || 0;\n                // Increment the new status count\n                const newStatusCount = leadStats.leads_by_status[lead.status] || 0;\n                setLeadStats({\n                    ...leadStats,\n                    leads_by_status: {\n                        ...leadStats.leads_by_status,\n                        [oldLead.status]: Math.max(0, oldStatusCount - 1),\n                        [lead.status]: newStatusCount + 1\n                    }\n                });\n            }\n            return updatedLeads;\n        });\n    };\n    const handleLeadDelete = (lead)=>{\n        setLeads((prevLeads)=>{\n            // Find the lead we're deleting\n            const oldLead = prevLeads.find((l)=>l.id === lead.id);\n            // Remove the lead\n            const updatedLeads = prevLeads.filter((l)=>l.id !== lead.id);\n            // Update stats\n            if (oldLead && leadStats) {\n                // Decrement the status count\n                const statusCount = leadStats.leads_by_status[oldLead.status] || 0;\n                setLeadStats({\n                    ...leadStats,\n                    total_leads: Math.max(0, leadStats.total_leads - 1),\n                    new_leads_period: Math.max(0, leadStats.new_leads_period - 1),\n                    leads_by_status: {\n                        ...leadStats.leads_by_status,\n                        [oldLead.status]: Math.max(0, statusCount - 1)\n                    }\n                });\n            }\n            return updatedLeads;\n        });\n    };\n    // Contacts handlers\n    const handleContactInsert = (contact)=>{\n        setContacts((prevContacts)=>{\n            // Make sure we don't duplicate\n            const exists = prevContacts.some((c)=>c.id === contact.id);\n            if (exists) return prevContacts;\n            // Add new contact\n            return [\n                ...prevContacts,\n                contact\n            ];\n        });\n    };\n    const handleContactUpdate = (contact)=>{\n        setContacts((prevContacts)=>prevContacts.map((c)=>c.id === contact.id ? contact : c));\n    };\n    const handleContactDelete = (contact)=>{\n        setContacts((prevContacts)=>prevContacts.filter((c)=>c.id !== contact.id));\n    };\n    // Subscribe to resource updates\n    const subscribeToCompanies = (handler)=>{\n        websocketService.subscribe(COMPANIES_CHANNEL, handler);\n    };\n    const subscribeToLeads = (handler)=>{\n        websocketService.subscribe(LEADS_CHANNEL, handler);\n    };\n    const subscribeToContacts = (handler)=>{\n        websocketService.subscribe(CONTACTS_CHANNEL, handler);\n    };\n    // Unsubscribe from resource updates\n    const unsubscribeFromCompanies = (handler)=>{\n        websocketService.unsubscribe(COMPANIES_CHANNEL, handler);\n    };\n    const unsubscribeFromLeads = (handler)=>{\n        websocketService.unsubscribe(LEADS_CHANNEL, handler);\n    };\n    const unsubscribeFromContacts = (handler)=>{\n        websocketService.unsubscribe(CONTACTS_CHANNEL, handler);\n    };\n    // Update lead stats\n    const updateLeadStats = (stats)=>{\n        setLeadStats(stats);\n    };\n    // Set up default subscriptions for internal cache updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isConnected) {\n            // Subscribe to companies updates\n            subscribeToCompanies((data)=>{\n                if (data.event === \"INSERT\") {\n                    handleCompanyInsert(data.new);\n                } else if (data.event === \"UPDATE\") {\n                    handleCompanyUpdate(data.new);\n                } else if (data.event === \"DELETE\") {\n                    handleCompanyDelete(data.old);\n                }\n            });\n            // Subscribe to leads updates\n            subscribeToLeads((data)=>{\n                if (data.event === \"INSERT\") {\n                    handleLeadInsert(data.new);\n                } else if (data.event === \"UPDATE\") {\n                    handleLeadUpdate(data.new);\n                } else if (data.event === \"DELETE\") {\n                    handleLeadDelete(data.old);\n                }\n            });\n            // Subscribe to contacts updates\n            subscribeToContacts((data)=>{\n                if (data.event === \"INSERT\") {\n                    handleContactInsert(data.new);\n                } else if (data.event === \"UPDATE\") {\n                    handleContactUpdate(data.new);\n                } else if (data.event === \"DELETE\") {\n                    handleContactDelete(data.old);\n                }\n            });\n            // Clean up subscriptions on unmount\n            return ()=>{\n                websocketService.unsubscribe(COMPANIES_CHANNEL);\n                websocketService.unsubscribe(LEADS_CHANNEL);\n                websocketService.unsubscribe(CONTACTS_CHANNEL);\n            };\n        }\n    }, [\n        isConnected\n    ]);\n    // Context value\n    const value = {\n        isConnected,\n        subscribeToCompanies,\n        subscribeToLeads,\n        subscribeToContacts,\n        unsubscribeFromCompanies,\n        unsubscribeFromLeads,\n        unsubscribeFromContacts,\n        companies,\n        leads,\n        contacts,\n        leadStats,\n        updateLeadStats\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(RealtimeContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/src/contexts/RealtimeContext.tsx\",\n        lineNumber: 318,\n        columnNumber: 5\n    }, undefined);\n};\n// Hook for consuming the context\nconst useRealtime = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(RealtimeContext);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RealtimeContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/contexts/RealtimeContext.tsx\n");

/***/ }),

/***/ "./src/contexts/ThemeContext.tsx":
/*!***************************************!*\
  !*** ./src/contexts/ThemeContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThemeProvider: () => (/* binding */ ThemeProvider),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   useTheme: () => (/* binding */ useTheme)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ThemeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    theme: \"light\",\n    toggleTheme: ()=>{},\n    isDarkMode: false\n});\nconst useTheme = ()=>(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ThemeContext);\nconst ThemeProvider = ({ children })=>{\n    const [theme, setTheme] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"light\");\n    // Initialize theme from localStorage or system preference\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (false) {}\n    }, []);\n    const toggleTheme = ()=>{\n        setTheme((prevTheme)=>{\n            const newTheme = prevTheme === \"light\" ? \"dark\" : \"light\";\n            // Update localStorage\n            localStorage.setItem(\"theme\", newTheme);\n            // Update body class\n            if (newTheme === \"dark\") {\n                document.body.classList.add(\"dark-mode\");\n                document.body.setAttribute(\"data-theme\", \"dark\");\n            } else {\n                document.body.classList.remove(\"dark-mode\");\n                document.body.removeAttribute(\"data-theme\");\n            }\n            return newTheme;\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ThemeContext.Provider, {\n        value: {\n            theme,\n            toggleTheme,\n            isDarkMode: theme === \"dark\"\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/tiagomarins/Projetos/claudeai/smart-chatbot-mb/frontend/src/contexts/ThemeContext.tsx\",\n        lineNumber: 71,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ThemeContext);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29udGV4dHMvVGhlbWVDb250ZXh0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE4RTtBQVU5RSxNQUFNSyw2QkFBZUosb0RBQWFBLENBQW1CO0lBQ25ESyxPQUFPO0lBQ1BDLGFBQWEsS0FBTztJQUNwQkMsWUFBWTtBQUNkO0FBRU8sTUFBTUMsV0FBVyxJQUFNUCxpREFBVUEsQ0FBQ0csY0FBYztBQUVoRCxNQUFNSyxnQkFBeUQsQ0FBQyxFQUFFQyxRQUFRLEVBQUU7SUFDakYsTUFBTSxDQUFDTCxPQUFPTSxTQUFTLEdBQUdSLCtDQUFRQSxDQUFZO0lBRTlDLDBEQUEwRDtJQUMxREQsZ0RBQVNBLENBQUM7UUFDUixJQUFJLEtBQWtCLEVBQWEsRUF1QmxDO0lBQ0gsR0FBRyxFQUFFO0lBRUwsTUFBTUksY0FBYztRQUNsQkssU0FBU2UsQ0FBQUE7WUFDUCxNQUFNQyxXQUFXRCxjQUFjLFVBQVUsU0FBUztZQUVsRCxzQkFBc0I7WUFDdEJiLGFBQWFlLE9BQU8sQ0FBQyxTQUFTRDtZQUU5QixvQkFBb0I7WUFDcEIsSUFBSUEsYUFBYSxRQUFRO2dCQUN2QlosU0FBU0MsSUFBSSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQztnQkFDNUJILFNBQVNDLElBQUksQ0FBQ0csWUFBWSxDQUFDLGNBQWM7WUFDM0MsT0FBTztnQkFDTEosU0FBU0MsSUFBSSxDQUFDQyxTQUFTLENBQUNHLE1BQU0sQ0FBQztnQkFDL0JMLFNBQVNDLElBQUksQ0FBQ0ssZUFBZSxDQUFDO1lBQ2hDO1lBRUEsT0FBT007UUFDVDtJQUNGO0lBRUEscUJBQ0UsOERBQUN2QixhQUFheUIsUUFBUTtRQUFDQyxPQUFPO1lBQzVCekI7WUFDQUM7WUFDQUMsWUFBWUYsVUFBVTtRQUN4QjtrQkFDR0s7Ozs7OztBQUdQLEVBQUU7QUFFRixpRUFBZU4sWUFBWUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vc3JjL2NvbnRleHRzL1RoZW1lQ29udGV4dC50c3g/N2UyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxudHlwZSBUaGVtZVR5cGUgPSAnbGlnaHQnIHwgJ2RhcmsnO1xuXG5pbnRlcmZhY2UgVGhlbWVDb250ZXh0VHlwZSB7XG4gIHRoZW1lOiBUaGVtZVR5cGU7XG4gIHRvZ2dsZVRoZW1lOiAoKSA9PiB2b2lkO1xuICBpc0RhcmtNb2RlOiBib29sZWFuO1xufVxuXG5jb25zdCBUaGVtZUNvbnRleHQgPSBjcmVhdGVDb250ZXh0PFRoZW1lQ29udGV4dFR5cGU+KHtcbiAgdGhlbWU6ICdsaWdodCcsXG4gIHRvZ2dsZVRoZW1lOiAoKSA9PiB7fSxcbiAgaXNEYXJrTW9kZTogZmFsc2UsXG59KTtcblxuZXhwb3J0IGNvbnN0IHVzZVRoZW1lID0gKCkgPT4gdXNlQ29udGV4dChUaGVtZUNvbnRleHQpO1xuXG5leHBvcnQgY29uc3QgVGhlbWVQcm92aWRlcjogUmVhY3QuRkM8eyBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlIH0+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbdGhlbWUsIHNldFRoZW1lXSA9IHVzZVN0YXRlPFRoZW1lVHlwZT4oJ2xpZ2h0Jyk7XG4gIFxuICAvLyBJbml0aWFsaXplIHRoZW1lIGZyb20gbG9jYWxTdG9yYWdlIG9yIHN5c3RlbSBwcmVmZXJlbmNlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zdCBzYXZlZFRoZW1lID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RoZW1lJyk7XG4gICAgICBcbiAgICAgIGlmIChzYXZlZFRoZW1lID09PSAnZGFyaycpIHtcbiAgICAgICAgc2V0VGhlbWUoJ2RhcmsnKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKCdkYXJrLW1vZGUnKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCAnZGFyaycpO1xuICAgICAgfSBlbHNlIGlmIChzYXZlZFRoZW1lID09PSAnbGlnaHQnKSB7XG4gICAgICAgIHNldFRoZW1lKCdsaWdodCcpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2RhcmstbW9kZScpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS10aGVtZScpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gQ2hlY2sgc3lzdGVtIHByZWZlcmVuY2VcbiAgICAgICAgY29uc3QgcHJlZmVyc0RhcmsgPSB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXM7XG4gICAgICAgIFxuICAgICAgICBpZiAocHJlZmVyc0RhcmspIHtcbiAgICAgICAgICBzZXRUaGVtZSgnZGFyaycpO1xuICAgICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnZGFyay1tb2RlJyk7XG4gICAgICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCAnZGFyaycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNldFRoZW1lKCdsaWdodCcpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LCBbXSk7XG4gIFxuICBjb25zdCB0b2dnbGVUaGVtZSA9ICgpID0+IHtcbiAgICBzZXRUaGVtZShwcmV2VGhlbWUgPT4ge1xuICAgICAgY29uc3QgbmV3VGhlbWUgPSBwcmV2VGhlbWUgPT09ICdsaWdodCcgPyAnZGFyaycgOiAnbGlnaHQnO1xuICAgICAgXG4gICAgICAvLyBVcGRhdGUgbG9jYWxTdG9yYWdlXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCBuZXdUaGVtZSk7XG4gICAgICBcbiAgICAgIC8vIFVwZGF0ZSBib2R5IGNsYXNzXG4gICAgICBpZiAobmV3VGhlbWUgPT09ICdkYXJrJykge1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoJ2RhcmstbW9kZScpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsICdkYXJrJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2RhcmstbW9kZScpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS10aGVtZScpO1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gbmV3VGhlbWU7XG4gICAgfSk7XG4gIH07XG4gIFxuICByZXR1cm4gKFxuICAgIDxUaGVtZUNvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgXG4gICAgICB0aGVtZSwgXG4gICAgICB0b2dnbGVUaGVtZSxcbiAgICAgIGlzRGFya01vZGU6IHRoZW1lID09PSAnZGFyaydcbiAgICB9fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L1RoZW1lQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRoZW1lQ29udGV4dDsiXSwibmFtZXMiOlsiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZUVmZmVjdCIsInVzZVN0YXRlIiwiVGhlbWVDb250ZXh0IiwidGhlbWUiLCJ0b2dnbGVUaGVtZSIsImlzRGFya01vZGUiLCJ1c2VUaGVtZSIsIlRoZW1lUHJvdmlkZXIiLCJjaGlsZHJlbiIsInNldFRoZW1lIiwic2F2ZWRUaGVtZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJkb2N1bWVudCIsImJvZHkiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJwcmVmZXJzRGFyayIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwicHJldlRoZW1lIiwibmV3VGhlbWUiLCJzZXRJdGVtIiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/contexts/ThemeContext.tsx\n");

/***/ }),

/***/ "./src/services/websocketService.ts":
/*!******************************************!*\
  !*** ./src/services/websocketService.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketService: () => (/* binding */ WebSocketService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * WebSocket message types\n */ /**\n * WebSocket service for real-time updates\n */ class WebSocketService {\n    /**\n   * Private constructor for singleton\n   */ constructor(){\n        this.socket = null;\n        this.clientId = null;\n        this.isConnected = false;\n        this.isAuthenticated = false;\n        this.token = null;\n        this.reconnectTimeout = null;\n        this.reconnectAttempts = 0;\n        this.maxReconnectAttempts = 5;\n        this.reconnectDelay = 3000 // 3 seconds\n        ;\n        this.pendingSubscriptions = new Set();\n        this.messageHandlers = new Map();\n        // Get WebSocket URL from environment or use default\n        const apiUrl = \"http://localhost:9032/api\" || 0;\n        this.wsUrl = apiUrl.replace(/^http/, \"ws\") + \"/ws\";\n    }\n    /**\n   * Get singleton instance\n   */ static getInstance() {\n        if (!WebSocketService.instance) {\n            WebSocketService.instance = new WebSocketService();\n        }\n        return WebSocketService.instance;\n    }\n    /**\n   * Connect to WebSocket server\n   */ connect() {\n        return new Promise((resolve)=>{\n            if (this.socket && this.isConnected) {\n                resolve(true);\n                return;\n            }\n            // Clear any existing reconnect timeout\n            if (this.reconnectTimeout) {\n                clearTimeout(this.reconnectTimeout);\n                this.reconnectTimeout = null;\n            }\n            try {\n                this.socket = new WebSocket(this.wsUrl);\n                // Connection opened\n                this.socket.addEventListener(\"open\", ()=>{\n                    console.log(\"WebSocket connected\");\n                    this.isConnected = true;\n                    this.reconnectAttempts = 0;\n                    // Authenticate if token is available\n                    if (this.token) {\n                        this.authenticate(this.token);\n                    }\n                    resolve(true);\n                });\n                // Connection closed\n                this.socket.addEventListener(\"close\", (event)=>{\n                    console.log(\"WebSocket disconnected:\", event.code, event.reason);\n                    this.isConnected = false;\n                    this.isAuthenticated = false;\n                    // Attempt to reconnect if not closed intentionally\n                    if (event.code !== 1000) {\n                        this.scheduleReconnect();\n                    }\n                });\n                // Connection error\n                this.socket.addEventListener(\"error\", (error)=>{\n                    console.error(\"WebSocket error:\", error);\n                    this.isConnected = false;\n                    this.isAuthenticated = false;\n                    resolve(false);\n                });\n                // Listen for messages\n                this.socket.addEventListener(\"message\", (event)=>{\n                    this.handleMessage(event.data);\n                });\n            } catch (error) {\n                console.error(\"WebSocket connection error:\", error);\n                resolve(false);\n                // Schedule reconnect\n                this.scheduleReconnect();\n            }\n        });\n    }\n    /**\n   * Disconnect from WebSocket server\n   */ disconnect() {\n        if (this.socket) {\n            this.socket.close(1000, \"Client disconnected\");\n            this.isConnected = false;\n            this.isAuthenticated = false;\n            this.socket = null;\n            // Clear any pending reconnect\n            if (this.reconnectTimeout) {\n                clearTimeout(this.reconnectTimeout);\n                this.reconnectTimeout = null;\n            }\n        }\n    }\n    /**\n   * Authenticate with JWT token\n   */ authenticate(token) {\n        this.token = token;\n        if (!this.isConnected) {\n            // Connect first if not connected\n            this.connect().then((connected)=>{\n                if (connected) {\n                    this.sendMessage({\n                        type: \"auth\",\n                        token\n                    });\n                }\n            });\n            return;\n        }\n        // Send authentication message\n        this.sendMessage({\n            type: \"auth\",\n            token\n        });\n    }\n    /**\n   * Subscribe to a channel\n   */ subscribe(channel, handler) {\n        // Add handler\n        if (!this.messageHandlers.has(channel)) {\n            this.messageHandlers.set(channel, new Set());\n        }\n        this.messageHandlers.get(channel).add(handler);\n        // If not authenticated yet, add to pending subscriptions\n        if (!this.isAuthenticated) {\n            this.pendingSubscriptions.add(channel);\n            return;\n        }\n        // Send subscribe message\n        this.sendMessage({\n            type: \"subscribe\",\n            channel\n        });\n    }\n    /**\n   * Unsubscribe from a channel\n   */ unsubscribe(channel, handler) {\n        // If a specific handler is provided, remove only that handler\n        if (handler && this.messageHandlers.has(channel)) {\n            this.messageHandlers.get(channel).delete(handler);\n            // If no handlers left, remove the channel\n            if (this.messageHandlers.get(channel).size === 0) {\n                this.messageHandlers.delete(channel);\n                // Also remove from pending subscriptions\n                this.pendingSubscriptions.delete(channel);\n                // Send unsubscribe message if connected\n                if (this.isConnected && this.isAuthenticated) {\n                    this.sendMessage({\n                        type: \"unsubscribe\",\n                        channel\n                    });\n                }\n            }\n        } else if (this.messageHandlers.has(channel)) {\n            this.messageHandlers.delete(channel);\n            // Also remove from pending subscriptions\n            this.pendingSubscriptions.delete(channel);\n            // Send unsubscribe message if connected\n            if (this.isConnected && this.isAuthenticated) {\n                this.sendMessage({\n                    type: \"unsubscribe\",\n                    channel\n                });\n            }\n        }\n    }\n    /**\n   * Process pending subscriptions after authentication\n   */ processPendingSubscriptions() {\n        if (!this.isAuthenticated || this.pendingSubscriptions.size === 0) {\n            return;\n        }\n        // Subscribe to all pending channels\n        for (const channel of this.pendingSubscriptions){\n            this.sendMessage({\n                type: \"subscribe\",\n                channel\n            });\n        }\n        // Clear pending subscriptions\n        this.pendingSubscriptions.clear();\n    }\n    /**\n   * Send a message to the WebSocket server\n   */ sendMessage(message) {\n        if (!this.socket || !this.isConnected) {\n            console.warn(\"WebSocket not connected, cannot send message\");\n            return;\n        }\n        try {\n            this.socket.send(JSON.stringify(message));\n        } catch (error) {\n            console.error(\"Error sending WebSocket message:\", error);\n        }\n    }\n    /**\n   * Handle incoming WebSocket message\n   */ handleMessage(data) {\n        try {\n            const message = JSON.parse(data);\n            // Handle different message types\n            switch(message.type){\n                case \"connection\":\n                    this.handleConnectionMessage(message);\n                    break;\n                case \"auth\":\n                    this.handleAuthMessage(message);\n                    break;\n                case \"subscribe\":\n                    console.log(\"Subscribed to channel:\", message.channel);\n                    break;\n                case \"unsubscribe\":\n                    console.log(\"Unsubscribed from channel:\", message.channel);\n                    break;\n                case \"message\":\n                    this.handleDataMessage(message);\n                    break;\n                case \"error\":\n                    console.error(\"WebSocket error:\", message.message);\n                    break;\n                default:\n                    console.warn(\"Unknown WebSocket message type:\", message.type);\n            }\n        } catch (error) {\n            console.error(\"Error parsing WebSocket message:\", error, data);\n        }\n    }\n    /**\n   * Handle connection message\n   */ handleConnectionMessage(message) {\n        if (message.clientId) {\n            this.clientId = message.clientId;\n            console.log(\"WebSocket client ID:\", this.clientId);\n            // Authenticate if token is available\n            if (this.token) {\n                this.authenticate(this.token);\n            }\n        }\n    }\n    /**\n   * Handle authentication message\n   */ handleAuthMessage(message) {\n        if (message.success) {\n            this.isAuthenticated = true;\n            console.log(\"WebSocket authenticated:\", message.userId);\n            // Process any pending subscriptions\n            this.processPendingSubscriptions();\n        } else {\n            this.isAuthenticated = false;\n            console.error(\"WebSocket authentication failed:\", message.error);\n        }\n    }\n    /**\n   * Handle data message\n   */ handleDataMessage(message) {\n        const { channel, data } = message;\n        // Notify handlers for this channel\n        if (this.messageHandlers.has(channel)) {\n            for (const handler of this.messageHandlers.get(channel)){\n                try {\n                    handler(data);\n                } catch (error) {\n                    console.error(`Error in handler for channel ${channel}:`, error);\n                }\n            }\n        }\n    }\n    /**\n   * Schedule reconnection attempt\n   */ scheduleReconnect() {\n        if (this.reconnectTimeout) {\n            clearTimeout(this.reconnectTimeout);\n        }\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.warn(\"Maximum reconnect attempts reached\");\n            return;\n        }\n        this.reconnectAttempts++;\n        // Exponential backoff with jitter\n        const delay = this.reconnectDelay * Math.pow(1.5, this.reconnectAttempts - 1) * (0.9 + Math.random() * 0.2);\n        console.log(`Scheduling reconnect attempt ${this.reconnectAttempts} in ${Math.round(delay)}ms`);\n        this.reconnectTimeout = setTimeout(()=>{\n            console.log(`Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);\n            this.connect();\n        }, delay);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebSocketService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/websocketService.ts\n");

/***/ }),

/***/ "./styles/dark-mode-tables.css":
/*!*************************************!*\
  !*** ./styles/dark-mode-tables.css ***!
  \*************************************/
/***/ (() => {



/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/head");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/bootstrap"], () => (__webpack_exec__("./pages/_app.tsx")));
module.exports = __webpack_exports__;

})();